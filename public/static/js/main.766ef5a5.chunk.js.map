{"version":3,"sources":["components/NavBar.js","pages/Home.js","pages/Resume.js","project_data/TicTacToe/TicTacToe.js","project_data/Dice/context/roll-context.js","project_data/Dice/components/RollAll.js","project_data/Dice/components/Die.js","project_data/Dice/components/DiceForm.js","project_data/Dice/components/DiceBag.js","pages/Projects.js","components/ContactForm.js","pages/ContactMe.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","to","className","src","height","Home","CardDeck","Card","body","outline","color","CardImg","alt","CardBody","CardText","style","Resume","title","Square","props","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","DiceBagContext","createContext","dice","rollAll","rollOne","addToDice","emptyDiceBag","removeFromDiceBag","RollAll","Consumer","Button","block","Die","die","index","id","numSides","currentRoll","DiceForm","handleInput","event","preventDefault","target","Form","Label","for","Input","type","onChange","min","placeholder","DiceBag","randomize","Math","ceil","random","from","forEach","push","displayDice","Provider","Projects","displayFSProjects","data","projects","project","top","img","CardTitle","name","CardLink","href","depLink","githubLink","ContactForm","modalOpen","toggle","useState","Modal","isOpen","ModalHeader","ModalBody","onSubmit","form","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","send","handleForm","required","ContactMe","setModal","MyRouter","path","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kyFAgBeA,EAbA,WACX,OACI,6BACI,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,WACnB,yBAAKC,IAAI,eAAeC,OAAO,UAEnC,kBAAC,IAAD,CAAMH,GAAG,UAAUC,UAAU,WAA7B,UACA,kBAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,WAA/B,YACA,kBAAC,IAAD,CAAMD,GAAG,WAAWC,UAAU,WAA9B,gB,wCC0BGG,EA3BF,WACT,OACI,oCACI,kBAAC,EAAD,MACA,8CACA,kBAACC,EAAA,EAAD,CAAUJ,UAAU,QAChB,kBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,SAAO,EAACC,MAAM,YAAYR,UAAU,gBACvC,kBAACS,EAAA,EAAD,CAAST,UAAU,UAAUC,IAAI,sBAAsBS,IAAI,oBAEnE,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,SAAO,EAACC,MAAM,YAAYR,UAAU,QAC3C,kBAACW,EAAA,EAAD,KACI,6DACA,kBAACC,EAAA,EAAD,CAAUC,MAAO,CAAE,UAAa,SAAhC,+YCTTC,EAVA,WACX,OACI,oCACI,kBAAC,EAAD,MACA,sCACA,4BAAQC,MAAM,SAASd,IAAI,yB,gDCNvC,SAASe,EAAOC,GACZ,OACE,4BAAQjB,UAAU,SAASkB,QAASD,EAAMC,SACvCD,EAAME,O,IAKTC,E,2KACSC,GAAI,IAAD,OACd,OACE,kBAACL,EAAD,CACEG,MAAOG,KAAKL,MAAMM,QAAQF,GAC1BH,QAAS,kBAAM,EAAKD,MAAMC,QAAQG,Q,+BAKtC,OACE,6BACE,yBAAKrB,UAAU,aACZsB,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKxB,UAAU,aACZsB,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKxB,UAAU,aACZsB,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GAzBTC,IAAMC,WA0G1B,SAASC,EAAgBJ,GAWvB,IAVA,IAAMK,EAAQ,CACZ,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEEP,EAAK,EAAGA,EAAGO,EAAMC,OAAQR,IAAK,CAAC,IAAD,cACrBO,EAAMP,GADe,GAC9BS,EAD8B,KAC5BC,EAD4B,KAC1BC,EAD0B,KAErC,GAAIT,EAAQO,IAAMP,EAAQO,KAAOP,EAAQQ,IAAMR,EAAQO,KAAOP,EAAQS,GACpE,OAAOT,EAAQO,GAGnB,OAAO,KAGMG,M,kDA7Fb,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACXC,QAAS,CAAC,CACRZ,QAASa,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPI,E,wDAWPlB,GACV,IAAMc,EAASb,KAAKY,MAAMC,QAAQK,MAAM,EAAGlB,KAAKY,MAAMI,WAAa,GAE7Df,EADSY,EAAQA,EAAQN,OAAQ,GACfN,QAAQiB,QAC7Bb,EAAgBJ,IAAYA,EAAQF,KAGvCE,EAAQF,GAAKC,KAAKY,MAAMK,QAAU,IAAM,IACxCjB,KAAKmB,SAAS,CACZN,QAASA,EAAQO,OAAO,CAAC,CACvBnB,QAASA,KAEXe,WAAaH,EAAQN,OACrBU,SAAUjB,KAAKY,MAAMK,a,6BAIlBI,GACLrB,KAAKmB,SAAS,CACZH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,+BAIlB,IAeJC,EAfG,OACDT,EAAUb,KAAKY,MAAMC,QACrBU,EAAUV,EAAQb,KAAKY,MAAMI,YAC7BQ,EAASnB,EAAgBkB,EAAQtB,SAEjCwB,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAKF,GACP,4BAAQ/B,QAAS,kBAAM,EAAKkC,OAAOH,KAAQC,OAUjD,OAJEN,EADEE,EACO,WAAaA,EAEb,iBAAmBxB,KAAKY,MAAMK,QAAU,IAAI,KAGrD,yBAAKvC,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEuB,QAASsB,EAAQtB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKgC,YAAYhC,OAGrC,yBAAKrB,UAAU,aACb,6BAAM4C,GACN,4BAAKG,S,GAnEItB,IAAMC,WCxCZ4B,EAAiB7B,IAAM8B,cAAc,CAC9CC,KAAM,GACNC,QAAS,aACTC,QAAS,aACTC,UAAW,aACXC,aAAc,aACdC,kBAAmB,e,QCMRC,MAVf,WACI,OACI,kBAACR,EAAeS,SAAhB,MACK,gBAAGN,EAAH,EAAGA,QAAH,OACG,kBAACO,EAAA,EAAD,CAAQhE,UAAU,UAAUQ,MAAO,UAAUU,QAASuC,EAASQ,OAAK,GAApE,qB,MCSDC,MAZf,YAA2B,IAAbC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,MACf,OACI,kBAACd,EAAeS,SAAhB,MACK,gBAAEL,EAAF,EAAEA,QAAF,OACG,yBAAK1D,UAAU,OACX,kBAACgE,EAAA,EAAD,CAAQxD,MAAM,UAAU6D,GAAID,EAAOlD,QAAS,kBAAMwC,EAAQU,IAAQH,OAAK,GAAvE,QAA8EE,EAAIG,SAAlF,cADJ,WAEaH,EAAII,iB,wBCqBlBC,E,kDA3BX,WAAYvD,GAAO,IAAD,8BACd,cAAMA,IAKVwD,YAAc,SAACC,GACXA,EAAMC,iBACN,EAAKlC,SAAS,CAAC6B,SAAUI,EAAME,OAAOzD,SANtC,EAAKe,MAAQ,CACToC,SAAU,GAHA,E,qDAUT,IAAD,OACJ,OACI,kBAAChB,EAAeS,SAAhB,MACK,gBAAEJ,EAAF,EAAEA,UAAF,OACG,kBAACkB,EAAA,EAAD,CAAM7E,UAAU,QACZ,kBAAC8E,EAAA,EAAD,CAAOC,IAAI,WAAX,8BACA,kBAACC,EAAA,EAAD,CAAOX,GAAG,UAAUY,KAAK,SAASC,SAAU,EAAKT,YAAYU,IAAI,IACzDC,YAAY,oBACpB,kBAACpB,EAAA,EAAD,CAAQ9C,QAAS,kBAAMyC,EAAU,CAACW,SAAU,EAAKpC,MAAMoC,SAAUC,YAAa,KACtE/D,MAAM,UAAUyD,OAAK,GAD7B,mB,GAnBDvC,aCkDR2D,E,kDAhDX,WAAYpE,GAAO,IAAD,8BACd,cAAMA,IAWVqE,UAAY,SAACnB,GACTA,EAAII,YAAcgB,KAAKC,KAAKD,KAAKE,SAAWtB,EAAIG,WAblC,EAelBb,QAAU,WACN,IAAMD,EAAOpB,MAAMsD,KAAK,EAAKxD,MAAMsB,MACnCA,EAAKmC,SAAQ,SAACxB,GACX,EAAKmB,UAAUnB,MAElB,EAAK1B,SAAS,CAACe,UApBD,EAsBlBE,QAAU,SAACU,GACP,IAAMZ,EAAOpB,MAAMsD,KAAK,EAAKxD,MAAMsB,MACnC,EAAK8B,UAAU9B,EAAKY,IACpB,EAAK3B,SAAS,CAACe,UAzBD,EA2BlBG,UAAY,SAACQ,GACT,IAAMX,EAAOpB,MAAMsD,KAAK,EAAKxD,MAAMsB,MACnCA,EAAKoC,KAAKzB,GACV,EAAK1B,SAAS,CAACe,UA3Bf,EAAKtB,MAAQ,CACTsB,KAAM,CACF,CAACc,SAAU,EAAGC,YAAa,IAE/Bd,QAAS,EAAKA,QACdC,QAAS,EAAKA,QACdC,UAAW,EAAKA,WATN,E,qDAiCd,IAAMkC,EAAcvE,KAAKY,MAAMsB,KAAKR,KAAI,SAACmB,EAAKC,GAC1C,OAAO,kBAAC,EAAD,CAAKD,IAAKA,EAAKC,MAAOA,OAEjC,OACI,kBAACd,EAAewC,SAAhB,CAAyB3E,MAAOG,KAAKY,OACjC,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACC2D,Q,GA1CCpE,IAAMC,W,wBCuDbqE,EA5CE,WACb,IAAMC,EAAoBC,EAAKC,SAASlD,KAAI,SAACmD,GACzC,OACI,kBAAC9F,EAAA,EAAD,CAAMC,MAAI,EAACC,SAAO,EAACC,MAAM,YAAYR,UAAU,QAC3C,kBAACS,EAAA,EAAD,CAAS2F,KAAG,EAACnG,IAAKkG,EAAQE,IAAK3F,IAAKyF,EAAQzF,MAC5C,kBAACC,EAAA,EAAD,KACI,kBAAC2F,EAAA,EAAD,KAAYH,EAAQI,MACpB,kBAAC3F,EAAA,EAAD,KAAWuF,EAAQjD,MACnB,kBAACsD,EAAA,EAAD,CAAU5B,OAAO,SAAS6B,KAAMN,EAAQO,SAAxC,yBACA,kBAACF,EAAA,EAAD,CAAU5B,OAAO,SAAS6B,KAAMN,EAAQQ,YAAxC,oBAKhB,OACI,oCACI,kBAAC,EAAD,MACA,wCACA,mDACA,kBAACvG,EAAA,EAAD,CAAUJ,UAAU,QAAQgG,GAC5B,8CAEA,kBAAC5F,EAAA,EAAD,CAAUJ,UAAU,QAChB,kBAACK,EAAA,EAAD,CAAME,SAAO,EAACC,MAAM,YAAYR,UAAU,OAAOqE,GAAG,aAChD,kBAAC1D,EAAA,EAAD,KACI,kBAAC2F,EAAA,EAAD,0BACA,kBAAC1F,EAAA,EAAD,4KACA,kBAAC4F,EAAA,EAAD,CAAU5B,OAAO,SAAS6B,KAAK,uDAA/B,eACA,kBAAC,EAAD,QAGR,kBAACpG,EAAA,EAAD,CAAME,SAAO,EAACC,MAAM,YAAYR,UAAU,OAAOqE,GAAG,QAChD,kBAAC1D,EAAA,EAAD,KACI,kBAAC2F,EAAA,EAAD,0BACA,kBAAC1F,EAAA,EAAD,kNACA,kBAAC4F,EAAA,EAAD,CAAU5B,OAAO,SAAS6B,KAAK,kDAA/B,eACA,kBAAC,EAAD,W,wBClBTG,EA/BK,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,OAAY,EACbC,mBAAS,IADI,6BAkBzC,OACI,kBAACC,EAAA,EAAD,CAAOC,OAAQJ,EAAWC,OAAQA,GAC9B,kBAACI,EAAA,EAAD,CAAaJ,OAAQA,GAArB,cACA,kBAACK,EAAA,EAAD,KAAW,kBAACtC,EAAA,EAAD,CAAMuC,SAAU,kBAlBhB,SAAC1C,GAChBA,EAAMC,iBACN,IAAM0C,EAAO3C,EAAME,OACbqB,EAAO,IAAIqB,SAASD,GACpBE,EAAM,IAAIC,eAChBD,EAAIE,KAAKJ,EAAKK,OAAQL,EAAKM,QAC3BJ,EAAIK,iBAAiB,SAAU,oBAC/BL,EAAIM,mBAAqB,WAClBN,EAAIO,aAAeN,eAAeO,MACnB,MAAfR,EAAI3E,QACHyE,EAAMW,SAGdT,EAAIU,KAAKhC,GAK4BiC,IAAcP,OAAO,gCAAgCD,OAAO,QACzF,kBAAC1C,EAAA,EAAD,CAAOC,KAAK,QAAQsB,KAAK,QAAQnB,YAAY,QAAQ+C,UAAQ,IAC7D,kBAACnD,EAAA,EAAD,CAAOC,KAAK,OAAOsB,KAAK,UAAUnB,YAAY,UAAU+C,UAAQ,IAChE,kBAACnD,EAAA,EAAD,CAAOC,KAAK,WAAWsB,KAAK,UAAUnB,YAAY,UAAU+C,UAAQ,IACpE,kBAACnE,EAAA,EAAD,CAAQxD,MAAM,UAAUyD,OAAK,GAA7B,cCKDmE,EA5BG,WAAM,IAAD,EACWrB,oBAAS,GADpB,mBACZF,EADY,KACDwB,EADC,KAEbvB,EAAS,WAAOuB,GAAUxB,IAChC,OACI,oCACI,kBAAC,EAAD,MACA,0CACA,kBAACzG,EAAA,EAAD,CAAUJ,UAAU,QAChB,kBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,SAAO,EAACC,MAAM,YAAYR,UAAU,QAC3C,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,MAAO,CAAE,UAAa,SAAhC,iQAMJ,kBAAC2F,EAAA,EAAD,CAAU5B,OAAO,SAAS6B,KAAK,8CAA/B,YACA,kBAACD,EAAA,EAAD,CAAU5B,OAAO,SAAS6B,KAAK,+BAA/B,UACA,kBAAC7F,EAAA,EAAD,wCACA,kBAACoD,EAAA,EAAD,CAAQxD,MAAM,UAAUU,QAAS4F,EAAQ7C,OAAK,GAA9C,qBACA,kBAAC,EAAD,CAAa4C,UAAWA,EAAWC,OAAQA,SCS9CwB,MAvBf,WACI,OACM,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,WACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GACjB,kBAAC,EAAD,WCdbC,MARf,WACE,OACE,yBAAKzI,UAAU,OACb,kBAAC,EAAD,QCKc0I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.766ef5a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBar = () =>{\r\n    return(\r\n        <nav>\r\n            <Link to='/' className=\"NavLink\">\r\n                <img src=\"/favicon.ico\" height=\"30px\"/>\r\n            </Link>\r\n            <Link to='/Resume' className=\"NavLink\">Resume</Link>\r\n            <Link to='/Projects' className=\"NavLink\">Projects</Link>\r\n            <Link to='/Contact' className=\"NavLink\">Contact Me</Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport {\r\n    Card, \r\n    CardText, \r\n    CardBody,\r\n    CardImg,\r\n    CardDeck\r\n} from 'reactstrap';\r\n\r\nconst Home = () =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            <h2>Joshua Peavler</h2>\r\n            <CardDeck className=\"full\">\r\n                <Card body outline color=\"secondary\" className=\"profile-card\">\r\n                        <CardImg className=\"profile\" src=\"/assets/profile.png\" alt=\"Joshua Peavler\"/>\r\n                </Card>\r\n                <Card body outline color=\"secondary\" className=\"card\">\r\n                    <CardBody>\r\n                        <h3>MERN Full Stack Web Developer</h3>\r\n                        <CardText style={{ \"textAlign\": \"Left\"}}>\r\n                        Aspiring to become a software developer. Currently studying MERN \r\n                        (MongoDB, Express, React, Node) full stack web development. Enjoys \r\n                        problem solving and troubleshooting, especially when helping others. \r\n                        Hopes to spruce up on C++ and learn other C languages after mastering \r\n                        JavaScript. Effective at training and teaching in both workplace and school.\r\n                        Studies Japanese via Doulingo on the side. \r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </CardDeck>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\n\r\nconst Resume = () =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            <h2>Resume</h2>\r\n            <iframe title=\"resume\" src=\"/assets/Resume.pdf\"></iframe>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n      };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history =this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current =history[history.length -1];\r\n    const squares = current.squares.slice();\r\n    if(calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      stepNumber : history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    let status;\r\n    if (winner){\r\n      status = 'Winner: ' + winner;\r\n    }else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X':'O');\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0,1,2],\r\n    [3,4,5],\r\n    [6,7,8],\r\n    [0,3,6],\r\n    [1,4,7],\r\n    [2,5,8],\r\n    [0,4,8],\r\n    [2,4,6],\r\n  ];\r\n  for (let i =  0; i <lines.length; i++) {\r\n    const [a,b,c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\n\r\nexport const DiceBagContext = React.createContext({\r\n    dice: [],\r\n    rollAll: () => {},\r\n    rollOne: () => {},\r\n    addToDice: () => {},\r\n    emptyDiceBag: () => {},\r\n    removeFromDiceBag: () => {}\r\n});","import React from 'react';\r\nimport {DiceBagContext} from \"../context/roll-context\"\r\nimport {Button} from 'reactstrap';\r\n\r\nfunction RollAll(){\r\n    return(\r\n        <DiceBagContext.Consumer>\r\n            {({ rollAll}) => (\r\n                <Button className=\"rollall\" color =\"primary\" onClick={rollAll} block>Roll All Dice</Button>\r\n            )}\r\n        </DiceBagContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default RollAll","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\nimport {DiceBagContext} from '../context/roll-context';\r\nimport '../dice.css'\r\n\r\nfunction Die({die, index}){\r\n    return(\r\n        <DiceBagContext.Consumer>\r\n            {({rollOne}) => (\r\n                <div className=\"Die\">\r\n                    <Button color=\"primary\" id={index} onClick={() => rollOne(index)} block>Roll {die.numSides} Sided Die</Button>\r\n                    Result: {die.currentRoll}\r\n                </div>\r\n            )}\r\n        </DiceBagContext.Consumer>\r\n    )\r\n}\r\nexport default Die;","import React, {Component} from 'react';\r\nimport {DiceBagContext} from '../context/roll-context';\r\nimport {Button, Input, Label, Form} from 'reactstrap';\r\n\r\nclass DiceForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            numSides: 2\r\n        }\r\n    }\r\n    handleInput = (event) => {\r\n        event.preventDefault();\r\n        this.setState({numSides: event.target.value})\r\n    }\r\n    render(){\r\n        return(\r\n            <DiceBagContext.Consumer>\r\n                {({addToDice}) => (\r\n                    <Form className=\"form\">\r\n                        <Label for=\"diceadd\">Add new Die to collection:</Label>\r\n                        <Input id=\"diceadd\" type=\"number\" onChange={this.handleInput}min=\"2\"  \r\n                                placeholder=\"Number of Sides\"/>\r\n                        <Button onClick={() => addToDice({numSides: this.state.numSides, currentRoll: 0})} \r\n                                color=\"primary\" block>Add Die</Button>\r\n                    </Form>\r\n                )}\r\n            </DiceBagContext.Consumer>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default DiceForm;","import React from 'react';\r\nimport RollAll from './RollAll';\r\nimport Die from './Die';\r\nimport DiceForm from './DiceForm';\r\nimport {DiceBagContext} from '../context/roll-context'\r\nclass DiceBag extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            dice: [ \r\n                {numSides: 6, currentRoll: 0},\r\n            ],\r\n            rollAll: this.rollAll,\r\n            rollOne: this.rollOne,\r\n            addToDice: this.addToDice\r\n        }\r\n    }\r\n    randomize = (die) => {\r\n        die.currentRoll = Math.ceil(Math.random() * die.numSides);\r\n    }\r\n    rollAll = () => {\r\n        const dice = Array.from(this.state.dice);\r\n        dice.forEach((die) => {\r\n           this.randomize(die);\r\n        });\r\n        this.setState({dice});\r\n    }\r\n    rollOne = (index) => {\r\n        const dice = Array.from(this.state.dice);\r\n        this.randomize(dice[index]);\r\n        this.setState({dice});\r\n    }\r\n    addToDice = (die) => {\r\n        const dice = Array.from(this.state.dice);\r\n        dice.push(die);\r\n        this.setState({dice});\r\n    } \r\n    render() {\r\n        const displayDice = this.state.dice.map((die, index) => {\r\n            return(<Die die={die} index={index}/>)  //TODO: add delete die button here and leverage index\r\n        })  \r\n        return (\r\n            <DiceBagContext.Provider value={this.state}>\r\n                <div>\r\n                    <DiceForm/>\r\n                    <RollAll/>\r\n                    {displayDice}\r\n                </div>\r\n            </DiceBagContext.Provider>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default DiceBag;","import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport data from '../project_data/project.json'\r\nimport Game from '../project_data/TicTacToe/TicTacToe'\r\nimport DiceBag from '../project_data/Dice/components/DiceBag'\r\nimport '../project_data/TicTacToe/TicTacToe.css'\r\nimport {\r\n    CardDeck,\r\n    Card, \r\n    CardImg, \r\n    CardText, \r\n    CardBody,\r\n    CardTitle,\r\n    CardLink,\r\n} from 'reactstrap';\r\n\r\nconst Projects = () =>{\r\n    const displayFSProjects = data.projects.map((project) =>{\r\n        return(\r\n            <Card body outline color=\"secondary\" className=\"card\">\r\n                <CardImg top src={project.img} alt={project.alt}/>\r\n                <CardBody>\r\n                    <CardTitle>{project.name}</CardTitle>\r\n                    <CardText>{project.desc}</CardText>\r\n                    <CardLink target=\"_blank\" href={project.depLink}>Deployed Project Link</CardLink>\r\n                    <CardLink target=\"_blank\" href={project.githubLink}>Github Link</CardLink>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    })\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            <h2>Projects</h2>\r\n            <h3>Full Stack Projects</h3>\r\n            <CardDeck className=\"full\">{displayFSProjects}</CardDeck>\r\n            <h3>Small Projects</h3>\r\n\r\n            <CardDeck className=\"full\">\r\n                <Card outline color=\"secondary\" className=\"card\" id=\"TicTacToe\">\r\n                    <CardBody>\r\n                        <CardTitle>React Tic Tac Toe</CardTitle>\r\n                        <CardText>My first project using React, I followed the React tutorial to make this Tic Tac Toe game. The buttons allow the user to transport back in time to a specific move.</CardText>\r\n                        <CardLink target=\"_blank\" href=\"https://github.com/jpeavler/Intro-to-React-Tutorial\">Github Link</CardLink>\r\n                        <Game/>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card outline color=\"secondary\" className=\"card\" id=\"Dice\">\r\n                    <CardBody>\r\n                        <CardTitle>Dice with Context</CardTitle>\r\n                        <CardText>Created using React, this applet allows users to make as many dice as they want with as many sides as they want. This is my first project I made to utilize Context. Feel free to make and roll your own.</CardText>\r\n                        <CardLink target=\"_blank\" href=\"https://github.com/jpeavler/Dice-React-Context\">Github Link</CardLink>\r\n                        <DiceBag/>\r\n                    </CardBody>\r\n                </Card>\r\n            </CardDeck>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React, {useState} from 'react';\r\nimport {Form, Input, Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n\r\nconst ContactForm = ({modalOpen, toggle}) => {\r\n    const [status, setStatus] = useState('');\r\n\r\n    const handleForm = (event) => {\r\n        event.preventDefault();\r\n        const form = event.target;\r\n        const data = new FormData(form);\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(form.method, form.action);\r\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState !== XMLHttpRequest.DONE) return;\r\n            if(xhr.status === 200) {\r\n                form. reset();\r\n            }\r\n        }\r\n        xhr.send(data);\r\n    }\r\n    return (\r\n        <Modal isOpen={modalOpen} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Contact Me</ModalHeader>\r\n            <ModalBody><Form onSubmit={() => handleForm()} action=\"https://formspree.io/xgenyvdl\" method=\"POST\">\r\n                <Input type=\"email\" name=\"email\" placeholder=\"Email\" required/>\r\n                <Input type=\"text\" name=\"subject\" placeholder=\"Subject\" required/>\r\n                <Input type=\"textarea\" name=\"message\" placeholder=\"Message\" required/>\r\n                <Button color=\"primary\" block>Submit</Button>\r\n            </Form></ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ContactForm;","import React, {useState} from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport ContactForm from '../components/ContactForm';\r\nimport {CardDeck, Card, CardText, CardBody, CardLink, Button} from 'reactstrap'\r\n\r\nconst ContactMe = () =>{\r\n    const [modalOpen, setModal] = useState(false);\r\n    const toggle = () => {setModal(!modalOpen)}\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            <h2>Contact Me</h2>\r\n            <CardDeck className=\"full\">\r\n                <Card body outline color=\"secondary\" className=\"card\">\r\n                    <CardBody>\r\n                        <CardText style={{ \"textAlign\": \"Left\"}}>\r\n                            If you would like to reach out to talk about coding projects, feel free to\r\n                            reach me via Github. If you are interested in networking, feel free to \r\n                            contact me via LinkedIn or Github. I'm also always open via email as well.\r\n                            Feel free to use the form below.\r\n                        </CardText>\r\n                    <CardLink target=\"_blank\" href=\"https://www.linkedin.com/in/joshuapeavler/\">LinkedIn</CardLink>\r\n                    <CardLink target=\"_blank\" href=\"https://github.com/jpeavler\">Github</CardLink>\r\n                    <CardText>Email: joshuaapeavler@gmail.com</CardText>\r\n                    <Button color=\"primary\" onClick={toggle} block>Open Contact Form</Button>\r\n                    <ContactForm modalOpen={modalOpen} toggle={toggle}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </CardDeck>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactMe;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Resume from './pages/Resume';\r\nimport Projects from './pages/Projects';\r\nimport ContactMe from './pages/ContactMe';\r\n\r\n  function MyRouter () {\r\n      return(\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/Resume\">\r\n                            <Resume/>  \r\n                        </Route>\r\n                        <Route path=\"/Projects\">\r\n                            <Projects/>\r\n                        </Route>\r\n                        <Route path=\"/Contact\">\r\n                            <ContactMe/>\r\n                        </Route>\r\n                        <Route path=\"/\" exact>\r\n                            <Home/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n      )\r\n  }\r\n\r\n  export default MyRouter;","import React from 'react';\nimport './App.css';\nimport MyRouter from './Router'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyRouter/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}