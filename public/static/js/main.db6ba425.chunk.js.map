{"version":3,"sources":["components/NavBar.js","components/Home.js","components/Resume.js","components/Projects.js","components/ContactMe.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","color","to","className","Home","Row","Col","sm","Card","CardBody","CardText","Resume","title","src","width","height","Projects","CardImg","top","alt","CardTitle","CardLink","href","ContactMe","style","MyRouter","path","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0RAiBeA,EAXA,WACX,OACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,SACV,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,WAAvB,QACA,kBAAC,IAAD,CAAMD,GAAG,UAAUC,UAAU,WAA7B,UACA,kBAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,WAA/B,YACA,kBAAC,IAAD,CAAMD,GAAG,WAAWC,UAAU,WAA9B,gB,wCCqBGC,EArBF,WACT,OACI,oCACI,kBAAC,EAAD,MACA,oCACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,yFCTbC,EAVA,WACX,OACI,oCACI,kBAAC,EAAD,MACA,sCACA,4BAAQC,MAAM,SAASC,IAAI,qBAAqBC,MAAM,MAAMC,OAAO,Y,wBCkDhEC,EA7CE,WACb,OACI,oCACI,kBAAC,EAAD,MACA,wCACA,yBAAKb,UAAU,YACf,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAK,MACV,kBAACD,EAAA,EAAD,CAAKC,GAAI,KACL,kBAACC,EAAA,EAAD,KACI,kBAACS,EAAA,EAAD,CAASC,KAAG,EAACL,IAAI,oCAAoCM,IAAI,4BACzD,kBAACV,EAAA,EAAD,KACI,kBAACW,EAAA,EAAD,wBACA,kBAACV,EAAA,EAAD,sWAKA,kBAACW,EAAA,EAAD,CAAUC,KAAK,oDAAf,yBACA,kBAACD,EAAA,EAAD,CAAUC,KAAK,+CAAf,kBAIZ,kBAAChB,EAAA,EAAD,CAAKC,GAAI,KACL,kBAACC,EAAA,EAAD,KACI,kBAACS,EAAA,EAAD,CAASC,KAAG,EAACL,IAAI,0BAA0BM,IAAI,wCAC/C,kBAACV,EAAA,EAAD,KACI,kBAACW,EAAA,EAAD,oCACA,kBAACV,EAAA,EAAD,8ZAMA,kBAACW,EAAA,EAAD,CAAUC,KAAK,2CAAf,yBACA,kBAACD,EAAA,EAAD,CAAUC,KAAK,+CAAf,sBCLbC,EA/BG,WACd,OACI,oCACI,kBAAC,EAAD,MACA,0CACA,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACC,EAAA,EAAD,KACI,kBAACS,EAAA,EAAD,CAASJ,IAAI,6BAA6BM,IAAI,qBAGtD,kBAACb,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACC,EAAA,EAAD,CAAMgB,MAAO,CAAET,OAAQ,UACnB,kBAACN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUc,MAAO,CAAE,aAAc,SAAjC,gOAKJ,kBAACH,EAAA,EAAD,CAAUC,KAAK,8CAAf,YACA,kBAACD,EAAA,EAAD,CAAUC,KAAK,+BAAf,UACA,kBAACZ,EAAA,EAAD,8CCAPe,MAvBf,WACI,OACM,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,WACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GACjB,kBAAC,EAAD,WCdbC,MARf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,QCKc0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.db6ba425.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n    Navbar\r\n} from 'reactstrap';\r\n\r\nconst NavBar = () =>{\r\n    return(\r\n        <Navbar color=\"light\">\r\n            <Link to='/' className=\"NavLink\">Home</Link>\r\n            <Link to='/Resume' className=\"NavLink\">Resume</Link>\r\n            <Link to='/Projects' className=\"NavLink\">Projects</Link>\r\n            <Link to='/Contact' className=\"NavLink\">Contact Me</Link>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport {\r\n    Card, \r\n    CardImg, \r\n    CardText, \r\n    CardBody,\r\n    CardLink,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\n\r\nconst Home = () =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            <h2>Home</h2>\r\n            <Row>\r\n                <Col sm=\"2\"></Col>\r\n                <Col sm=\"8\">\r\n                    <Card>\r\n                        <CardBody>\r\n                            <CardText>\r\n                            Aspiring web developer. Learning full stack development at Helio Training.\r\n                            </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport NavBar from './NavBar';\r\n\r\nconst Resume = () =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            <h2>Resume</h2>\r\n            <iframe title=\"resume\" src=\"/assets/Resume.pdf\" width=\"80%\" height=\"900px\"></iframe>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport {\r\n    Card, \r\n    CardImg, \r\n    CardText, \r\n    CardBody,\r\n    CardTitle,\r\n    CardLink,\r\n    Row,\r\n    Col\r\n} from 'reactstrap'\r\n\r\nconst Projects = () =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            <h2>Projects</h2>\r\n            <div className=\"projects\">\r\n            <Row>\r\n                <Col sm = \"1\"></Col>\r\n                <Col sm =\"5\">\r\n                    <Card>\r\n                        <CardImg top src=\"/assets/gameCollectionProject.png\" alt=\"Game Collection Project\"/>\r\n                        <CardBody>\r\n                            <CardTitle>Game Collection</CardTitle>\r\n                            <CardText>\r\n                            I personally liked how I styled this project, it was my first time I felt that I made a nice looking website.\r\n                            A website that allows users to view, create, edit, or delete descriptions of games in a game collection. The Video Games tab is\r\n                            the only functional page as I plan to add additional game collections in the future. Utilizes a MERN fullstack.\r\n                            </CardText>\r\n                            <CardLink href=\"https://game-collection-jpeavler2.herokuapp.com/\">Deployed Project Link</CardLink>\r\n                            <CardLink href=\"https://github.com/jpeavler/video-games-api\">Github Link</CardLink>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm =\"5\">\r\n                    <Card>\r\n                        <CardImg top src=\"/assets/WebDevTerms.png\" alt=\"Web Development Terminology Project\"/>\r\n                        <CardBody>\r\n                            <CardTitle>Web Development Terminology</CardTitle>\r\n                            <CardText>\r\n                            I share this project since this is the most robust project I've made functionally speaking.\r\n                            A Computer Science terminology wiki that allows the user to store terms with their own resources.\r\n                            Once a term is added to the wiki, additional resources can be inserted or removed. Allows user to archive and\r\n                            delete archived terms. The two buttons at top allow the user to hide archived and active terms from view.\r\n                            </CardText>\r\n                            <CardLink href=\"https://learners-catalog.herokuapp.com/\">Deployed Project Link</CardLink>\r\n                            <CardLink href=\"https://github.com/jpeavler/video-games-api\">Github Link</CardLink>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport {\r\n    Card, \r\n    CardImg, \r\n    CardText, \r\n    CardBody,\r\n    CardLink,\r\n    Row,\r\n    Col\r\n} from 'reactstrap'\r\n\r\nconst ContactMe = () =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            <h2>Contact Me</h2>\r\n            <Row>\r\n                <Col sm=\"1\"></Col>\r\n                <Col sm=\"2\">\r\n                    <Card>\r\n                        <CardImg src=\"/assets/ProfilePicture.jpg\" alt=\"Joshua Peavler\"/>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm=\"8\">\r\n                    <Card style={{ height: '18rem'}}>\r\n                        <CardBody>\r\n                            <CardText style={{ \"text-align\": \"Left\"}}>\r\n                                If you would like to reach out to talk about coding projects, feel free to\r\n                                reach me via Github. If you are interested in networking, feel free to \r\n                                contact me via LinkedIn or Github. I'm also always open via email as well.\r\n                            </CardText>\r\n                        <CardLink href=\"https://www.linkedin.com/in/joshuapeavler/\">LinkedIn</CardLink>\r\n                        <CardLink href=\"https://github.com/jpeavler\">Github</CardLink>\r\n                        <CardText>Email: joshuaapeavler@gmail.com</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactMe;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Resume from './components/Resume';\r\nimport Projects from './components/Projects';\r\nimport ContactMe from './components/ContactMe';\r\n\r\n  function MyRouter () {\r\n      return(\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/Resume\">\r\n                            <Resume/>  \r\n                        </Route>\r\n                        <Route path=\"/Projects\">\r\n                            <Projects/>\r\n                        </Route>\r\n                        <Route path=\"/Contact\">\r\n                            <ContactMe/>\r\n                        </Route>\r\n                        <Route path=\"/\" exact>\r\n                            <Home/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n      )\r\n  }\r\n\r\n  export default MyRouter;","import React from 'react';\nimport './App.css';\nimport MyRouter from './Router'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyRouter/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}